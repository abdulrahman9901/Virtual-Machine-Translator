@256
D=A
@SP
M=D
// call Sys.init 0
@Sys.init_1_return_address
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
D=M-D
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Sys.init_1_return_address)
// declare function Sys.init 0
(Sys.init)
@0
D=A
@R10
M=D
@0
D=A
@R12
M=D
@Sys.init_NO_ARGS
D;JEQ
(Sys.init_LCL_INIT)
@R10
D=M
@SP
A=M+D
M=0
@R10
M=M+1
D=M
@R12
D=M-D
@Sys.init_LCL_INIT
D;JGT
@0
D=A
@SP
M=M+D
(Sys.init_NO_ARGS)
// push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Class1.set 2
@Class1.set_1_return_address
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@SP
D=M-D
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.set
0;JMP
(Class1.set_1_return_address)
// pop temp 0
@5
D= A
@0
A = A + D
D=A
@SP
AM=M-1
D=D+M
A=D-M
M=D-A
// push constant 23
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Class2.set 2
@Class2.set_1_return_address
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@SP
D=M-D
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.set
0;JMP
(Class2.set_1_return_address)
// pop temp 0
@5
D= A
@0
A = A + D
D=A
@SP
AM=M-1
D=D+M
A=D-M
M=D-A
// call Class1.get 0
@Class1.get_1_return_address
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
D=M-D
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.get
0;JMP
(Class1.get_1_return_address)
// call Class2.get 0
@Class2.get_1_return_address
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
D=M-D
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.get
0;JMP
(Class2.get_1_return_address)
// label WHILE 
(WHILE)
// goto WHILE 
@WHILE
0;JMP
// declare function Class1.set 0
(Class1.set)
@0
D=A
@R10
M=D
@0
D=A
@R12
M=D
@Class1.set_NO_ARGS
D;JEQ
(Class1.set_LCL_INIT)
@R10
D=M
@SP
A=M+D
M=0
@R10
M=M+1
D=M
@R12
D=M-D
@Class1.set_LCL_INIT
D;JGT
@0
D=A
@SP
M=M+D
(Class1.set_NO_ARGS)
// push argument 0
@ARG
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 0
@SP
AM=M-1
D=M
@StaticsTest_Class1.0
M=D
// push argument 1
@ARG
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 1
@SP
AM=M-1
D=M
@StaticsTest_Class1.1
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return from function 
@LCL
D=M
@R11
M=D
@5
D=A
@R11
D=M-D
A=D
D=M
@R9
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R11
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R11
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R11
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R11
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R9
A=M
0;JMP
// declare function Class1.get 0
(Class1.get)
@0
D=A
@R10
M=D
@0
D=A
@R12
M=D
@Class1.get_NO_ARGS
D;JEQ
(Class1.get_LCL_INIT)
@R10
D=M
@SP
A=M+D
M=0
@R10
M=M+1
D=M
@R12
D=M-D
@Class1.get_LCL_INIT
D;JGT
@0
D=A
@SP
M=M+D
(Class1.get_NO_ARGS)
// push static 0
@StaticsTest_Class1.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// push static 1
@StaticsTest_Class1.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1
// return from function 
@LCL
D=M
@R11
M=D
@5
D=A
@R11
D=M-D
A=D
D=M
@R9
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R11
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R11
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R11
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R11
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R9
A=M
0;JMP
// declare function Class2.set 0
(Class2.set)
@0
D=A
@R10
M=D
@0
D=A
@R12
M=D
@Class2.set_NO_ARGS
D;JEQ
(Class2.set_LCL_INIT)
@R10
D=M
@SP
A=M+D
M=0
@R10
M=M+1
D=M
@R12
D=M-D
@Class2.set_LCL_INIT
D;JGT
@0
D=A
@SP
M=M+D
(Class2.set_NO_ARGS)
// push argument 0
@ARG
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 0
@SP
AM=M-1
D=M
@StaticsTest_Class2.0
M=D
// push argument 1
@ARG
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 1
@SP
AM=M-1
D=M
@StaticsTest_Class2.1
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return from function 
@LCL
D=M
@R11
M=D
@5
D=A
@R11
D=M-D
A=D
D=M
@R9
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R11
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R11
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R11
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R11
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R9
A=M
0;JMP
// declare function Class2.get 0
(Class2.get)
@0
D=A
@R10
M=D
@0
D=A
@R12
M=D
@Class2.get_NO_ARGS
D;JEQ
(Class2.get_LCL_INIT)
@R10
D=M
@SP
A=M+D
M=0
@R10
M=M+1
D=M
@R12
D=M-D
@Class2.get_LCL_INIT
D;JGT
@0
D=A
@SP
M=M+D
(Class2.get_NO_ARGS)
// push static 0
@StaticsTest_Class2.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// push static 1
@StaticsTest_Class2.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1
// return from function 
@LCL
D=M
@R11
M=D
@5
D=A
@R11
D=M-D
A=D
D=M
@R9
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R11
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R11
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R11
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R11
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R9
A=M
0;JMP
